{"version":3,"sources":["App.js","index.js"],"names":["App","useState","time","setTime","status","setStatus","useEffect","unsubscribe$","Subject","interval","pipe","takeUntil","subscribe","val","next","complete","start","React","useCallback","stop","reset","wait","className","Date","toISOString","slice","type","onClick","onDoubleClick","ReactDOM","render","document","getElementById"],"mappings":"kPAoFeA,MA7Ef,WACE,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,QAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACR,IAAMC,EAAe,IAAIC,IAUzB,OARAC,YAAS,KACNC,KAAKC,YAAUJ,IACfK,WAAU,WACM,UAAXR,GACFD,GAAQ,SAAAU,GAAG,OAAIA,EAAM,UAIpB,WACLN,EAAaO,OACbP,EAAaQ,cAEd,CAACX,IAEJ,IAAMY,EAAQC,IAAMC,aAAY,WAC9Bb,EAAU,WACT,IAEGc,EAAOF,IAAMC,aAAY,WAC7Bb,EAAU,QACVF,EAAQ,KACP,IAEGiB,EAAQH,IAAMC,aAAY,WAC9Bf,EAAQ,KACP,IAEGkB,EAAOJ,IAAMC,aAAY,WAC7Bb,EAAU,UACT,IAEH,OACE,yBAAKiB,UAAU,OACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,cACZ,IAAIC,KAAKrB,GAAMsB,cAAcC,MAAM,GAAI,KAE1C,4BACEC,KAAK,SACLJ,UAAU,SACVK,QAASX,GAHX,SAOA,4BACEU,KAAK,SACLJ,UAAU,SACVK,QAASR,GAHX,QAOA,4BACEO,KAAK,SACLJ,UAAU,SACVK,QAASP,GAHX,SAOA,4BACEM,KAAK,SACLJ,UAAU,SACVM,cAAeP,GAHjB,WCpERQ,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.216ed347.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { interval, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport './App.css';\n\nfunction App() {\n  const [time, setTime] = useState(0);\n  const [status, setStatus] = useState('stop');\n\n  useEffect(() => {\n    const unsubscribe$ = new Subject();\n\n    interval(1000)\n      .pipe(takeUntil(unsubscribe$))\n      .subscribe(() => {\n        if (status === 'start') {\n          setTime(val => val + 1000);\n        }\n      });\n\n    return () => {\n      unsubscribe$.next();\n      unsubscribe$.complete();\n    };\n  }, [status]);\n\n  const start = React.useCallback(() => {\n    setStatus('start');\n  }, []);\n\n  const stop = React.useCallback(() => {\n    setStatus('stop');\n    setTime(0);\n  }, []);\n\n  const reset = React.useCallback(() => {\n    setTime(0);\n  }, []);\n\n  const wait = React.useCallback(() => {\n    setStatus('wait');\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app-content\">\n        <div className=\"time-block\">\n          {new Date(time).toISOString().slice(11, 19)}\n        </div>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={start}\n        >\n          Start\n        </button>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={stop}\n        >\n          Stop\n        </button>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={reset}\n        >\n          Reset\n        </button>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onDoubleClick={wait}\n        >\n          Wait\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}